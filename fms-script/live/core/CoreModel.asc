function CoreModel()
{

}

CoreModel.instance;
CoreModel.prototype.callbackList = new Object();

//注册回调函数
CoreModel.prototype.registerCallback = function(target, funcName, moduleID)
{
	var obj = {};
	obj.target = target;
	obj.funcName = funcName;
	this.callbackList[moduleID] = obj;
}

//检索并执行回调函数
CoreModel.prototype.retrievalCallback = function(client, message)
{
	var obj;
	for(var i in this.callbackList)
	{
		obj = this.callbackList[i];
		if(i == message.moduleID)  //对应的模块才执行
		{
			obj["target"][obj["funcName"]](client, message);
			break;
		}
	}
}

//广播给除了exception的所有客户端
CoreModel.prototype.brodcastMessage = function(message, exception)
{
	for each(var c in application.onlineClients)
	{
		(c != exception) && c.call("messageCallBack", null, message);
	}
}

CoreModel.getInstance = function()
{
	if(CoreModel.instance == null)
		CoreModel.instance = new CoreModel();
		
	return CoreModel.instance;
}